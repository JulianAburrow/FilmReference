@page
@model FilmReference.FrontEnd.Pages.GenrePages.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Genres</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<p>
    @Model.Count record@(Model._replacementHelper.ShowCorrectRecordText(@Model.Count)) found
</p>
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Genres[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genres[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genres[0].Film)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Genres)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                @{
                    var stringValues = Model._stringHelper.DisplayValues(item.Description, 50);
                }
                <td title="@stringValues.ToolTip">
                    @Html.DisplayFor(modelItem => stringValues.DisplayValue)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Film.Count)
                </td>
                <td>
                    <a asp-page="./Details" asp-route-genreid="@item.GenreId">Details</a> |
                    <a asp-page="./Edit" asp-route-genreid="@item.GenreId">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>



@{ for (var i = 1; i <= Model.TotalPages; i++)
    {
        <a asp-page="Index" asp-route-currentpage="@i">@i</a>
        if (i < Model.TotalPages)
        {
            @Html.Raw(" | ");
        }
    }
}